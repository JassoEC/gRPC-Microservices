// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.2
//   protoc               v3.20.3
// source: orders.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Empty } from "./google/protobuf/empty";
import { Product } from "./products";

export const protobufPackage = "orders";

export interface GetOrderRequest {
  orderId: string;
}

export interface Order {
  orderId: string;
  createdAt: string;
  items: OrderItem[];
}

export interface OrderItem {
  productId: string;
  quantity: number;
  orderId: string;
  product: Product | undefined;
}

export interface CreateOrderRequest {
  items: OrderItem[];
}

export interface ListOrdersResponse {
  orders: Order[];
}

export const ORDERS_PACKAGE_NAME = "orders";

export interface OrdersServiceClient {
  getOrder(request: GetOrderRequest): Observable<Order>;

  createOrder(request: CreateOrderRequest): Observable<Order>;

  listOrders(request: Empty): Observable<ListOrdersResponse>;
}

export interface OrdersServiceController {
  getOrder(request: GetOrderRequest): Promise<Order> | Observable<Order> | Order;

  createOrder(request: CreateOrderRequest): Promise<Order> | Observable<Order> | Order;

  listOrders(request: Empty): Promise<ListOrdersResponse> | Observable<ListOrdersResponse> | ListOrdersResponse;
}

export function OrdersServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getOrder", "createOrder", "listOrders"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("OrdersService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("OrdersService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ORDERS_SERVICE_NAME = "OrdersService";
