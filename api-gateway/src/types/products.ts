// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.2
//   protoc               v3.12.4
// source: products.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "products";

export interface GetProductRequest {
  productId: string;
}

export interface GetProductResponse {
  product: Product | undefined;
}

export interface Product {
  productId: string;
  name: string;
  description: string;
  price: number;
}

export const PRODUCTS_PACKAGE_NAME = "products";

export interface ProductsServiceClient {
  getProduct(request: GetProductRequest): Observable<GetProductResponse>;
}

export interface ProductsServiceController {
  getProduct(
    request: GetProductRequest,
  ): Promise<GetProductResponse> | Observable<GetProductResponse> | GetProductResponse;
}

export function ProductsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getProduct"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProductsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProductsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PRODUCTS_SERVICE_NAME = "ProductsService";
